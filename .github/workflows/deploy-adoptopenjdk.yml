name: Docker Build (AdoptOpenJDK)

on:
  workflow_dispatch:
  push:
   branches: [ main, production ]

permissions:
  id-token: write
  contents: read

jobs:
  docker-build:
    if: startsWith(github.repository, 'adoptium/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0

      - name: Login to our Azure subscription.
        uses: azure/login@92a5484dfaf04ca78a94597f4f19fea633851fa2 # v1.4.7
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID_OIDC }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    
      - name: Login to Azure Container Registry
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # v2.2.0
        with:
          registry: adoptopenjdkacr.azurecr.io
          username: ${{ secrets.AZURE_CLIENT_ID }}
          password: ${{ secrets.AZURE_CLIENT_SECRET }}

      - name: Detect Branch
        run: |
          case ${GITHUB_REF##*/} in
            production) echo "NAMESPACE=adoptopenjdk-alt" >> $GITHUB_ENV ;;
            *) echo "NAMESPACE=adoptopenjdk-alt-staging" >> $GITHUB_ENV ;;
          esac

      - name: Build container image and push to Azure
        uses: docker/build-push-action@0a97817b6ade9f46837855d676c4cca3a2471fc9 # v4.2.1
        with:
          file: ./deploy/Dockerfile
          tags: adoptopenjdkacr.azurecr.io/azure-${{ env.NAMESPACE }}:latest
          build-args: MAVEN_FLAGS="-Padoptopenjdk,-adoptium"
          push: true

      - name: Set the target Azure Kubernetes Service (AKS) cluster.
        uses: azure/aks-set-context@4edaee69f820359371ee8bc85189ac03a21d3a58 # v3.2
        with:
          resource-group: adopt-api
          cluster-name: aksff92

      - name: Redeploy updater-api
        run: kubectl config set-context --current --namespace=${{ env.NAMESPACE }} && kubectl rollout restart deployment updater-api
  
      - name: Redeploy frontend-service
        run: kubectl config set-context --current --namespace=${{ env.NAMESPACE }} && kubectl rollout restart deployment frontend-service

      # if the branch is production, redeploy the k8s service on digitalocean too
      - name: Login to DigitalOcean
        uses: digitalocean/action-doctl@cf10ddb4467f6fb84c01f7cc5f099cec71eabc93 # v2.4.1
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Set NAMEPSACE for DigitalOcean
        run: echo "NAMESPACE=adoptopenjdk-do" >> $GITHUB_ENV

      - name: Save DigitalOcean kubeconfig
        run: doctl kubernetes cluster kubeconfig save k8s-1-27-4-do-0-blr1-1693486270021

      - name: Redeploy updater-api on DigitalOcean
        if: startsWith(github.ref, 'refs/heads/production')
        run: kubectl config set-context --current --namespace=${{ env.NAMESPACE }} && kubectl rollout restart deployment updater-api

      - name: Redeploy frontend-service on DigitalOcean
        if: startsWith(github.ref, 'refs/heads/production')
        run: kubectl config set-context --current --namespace=${{ env.NAMESPACE }} && kubectl rollout restart deployment frontend-service
