name: Docker Build

on:
  workflow_dispatch:
  push:
   branches: [ main, production ]

jobs:
  docker-build:
    if: startsWith(github.repository, 'adoptium/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
    
      - name: Login to Azure Container Registry
        uses: docker/login-action@v1
        with:
          registry: adoptopenjdkacr.azurecr.io
          username: ${{ secrets.AZURE_CLIENT_ID }}
          password: ${{ secrets.AZURE_CLIENT_SECRET }}

      - name: Detect Branch
        run: |
          case ${GITHUB_REF##*/} in
            production) echo "NAMESPACE=api" >> $GITHUB_ENV ;;
            *) echo "NAMESPACE=api-staging" >> $GITHUB_ENV ;;
          esac

      - name: Build container image and push to Azure
        uses: docker/build-push-action@v2
        with:
          file: ./deploy/Dockerfile
          tags: adoptopenjdkacr.azurecr.io/adoptopenjdk-${{ env.NAMESPACE }}:latest
          push: true

      - name: Set the target Azure Kubernetes Service (AKS) cluster. 
        uses: azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: aksff92
          resource-group: adopt-api
          
      - name: Redeploy frontend-service
        run: kubectl config set-context --current --namespace=${{ env.NAMESPACE }} && kubectl rollout restart deployment frontend-service
