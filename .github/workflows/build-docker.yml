name: Docker Build

on:
  workflow_dispatch:
  push:
   branches: [ main, production ]

permissions:
  id-token: write
  contents: read

jobs:
  docker-build:
    if: startsWith(github.repository, 'adoptium/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

      - name: Login to our Azure subscription.
        uses: azure/login@92a5484dfaf04ca78a94597f4f19fea633851fa2 # v1.4.7
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID_OIDC }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    
      - name: Login to Azure Container Registry
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # v2.2.0
        with:
          registry: adoptopenjdkacr.azurecr.io
          username: ${{ secrets.AZURE_CLIENT_ID }}
          password: ${{ secrets.AZURE_CLIENT_SECRET }}

      - name: Detect Branch
        run: |
          case ${GITHUB_REF##*/} in
            production) echo "NAMESPACE=api" >> $GITHUB_ENV ;;
            *) echo "NAMESPACE=api-staging" >> $GITHUB_ENV ;;
          esac

      - name: Build container image and push to Azure
        uses: docker/build-push-action@2eb1c1961a95fc15694676618e422e8ba1d63825 # v4.1.1
        with:
          file: ./deploy/Dockerfile
          tags: adoptopenjdkacr.azurecr.io/adoptopenjdk-${{ env.NAMESPACE }}:latest
          push: true

      - name: Set the target Azure Kubernetes Service (AKS) cluster.
        uses: azure/aks-set-context@4edaee69f820359371ee8bc85189ac03a21d3a58 # v3.2
        with:
          resource-group: adopt-api
          cluster-name: aksff92

      - name: Redeploy updater-api
        run: kubectl config set-context --current --namespace=${{ env.NAMESPACE }} && kubectl rollout restart deployment updater-api

      - name: Redeploy frontend-service
        run: kubectl config set-context --current --namespace=${{ env.NAMESPACE }} && kubectl rollout restart deployment frontend-service
